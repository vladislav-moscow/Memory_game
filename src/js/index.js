const EMOJIS = ["ü•ë", "üçá", "üçí", "üåΩ", "ü•ï", "üçâ", "ü•î", "üçå", "ü•≠", "üçç"];

/**
 *
 * @param {string[]} items - –ê–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏—è –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏.
 * @returns {string[]} - –ü–µ—Ä–µ–º–µ—à–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ —Å –¥–∞–Ω–Ω—ã–º–∏.
 */
function shuffleAndPickRandom(items) {
	if (items && Array.isArray(items)) {
		// —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ –≤ —Å–ª—É—á–∞–π–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
		const sortedArr = items.sort(() => Math.random(items) - 0.5);

		// –¥–æ—Å—Ç–∞–µ–º –∏–∑ 10 —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø–µ—Ä–≤—ã–µ 8
		const dublicateArr = [...sortedArr].slice(0, 8);

		// –∏–∑ –º–∞—Å—Å–∏–≤–∞ –≤ 8 —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –¥–µ–ª–∞–µ–º 16
		const doubleArr = [...dublicateArr, ...dublicateArr];

		// —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –º–∞—Å—Å–∏–≤–∞ –∏–∑ 16 —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ —Å–ª—É—á–∞–π–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
		const sortedDoubleArr = doubleArr.sort(() => Math.random(doubleArr) - 0.5);

		return sortedDoubleArr;
	} else {
		throw new Error("–ü–µ—Ä–µ–¥–∞–π—Ç–µ —ç–º–æ–¥–∑–∏ –≤ –≤–∏–¥–µ –º–∞—Å—Å–∏–≤–∞!");
	}
}

/**
 * –ü–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç –∫–∞—Ä—Ç—É –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ö–æ–¥ –∏–≥—Ä–æ–∫–∞
 * @param {HTMLDivElement} card - –ö–∞—Ä—Ç–æ—á–∫–∞ –¥–ª—è –ø–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è.
 */
const flipCard = (card) => {
	// –ü–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –∫–∞—Ä—Ç—É
	card.classList.add("flipped");

	// –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã
	STATE.flippedCards++;

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–∫–æ–ª—å–∫–æ –∫–∞—Ä—Ç —É–∂–µ –ø–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç–æ
	if (STATE.flippedCards === 2) {
		// –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ö–æ–¥–æ–≤
		STATE.totalFlips++;

		// –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç—ã–µ –∫–∞—Ä—Ç—ã
		const flippedCards = document.querySelectorAll(".flipped");

		// —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É –ø–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏
		setTimeout(() => {
			flippedCards.forEach((card) => card.classList.remove("flipped"));
			STATE.flippedCards = 0;
		}, 1000);

		// –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ —Ö–æ–¥–æ–≤ –Ω–∞ —ç–∫—Ä–∞–Ω–µ
		SELECTORS.moves.innerText = STATE.totalFlips;
	}
	console.log("—Ä–æ–¥–∏—Ç–µ–ª—å –∫–∞—Ä—Ç–æ—á–∫–∏ –ø–æ–ª—É—á–µ–Ω", card);
};

/**
 * –°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã
 * @property {boolean} isGameStarted - –ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å –∏–ª–∏ –Ω–µ—Ç.
 * @property {number} totalTime - –û–±—â–µ–µ –≤—Ä–µ–º—è –≤ –∏–≥—Ä–µ.
 * @property {number} flippedCards - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫.
 * @property {number} totalFlips - –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫.
 */
const STATE = {
	isGameStarted: false,
	totalTime: 0,
	flippedCards: 0,
	totalFlips: 0,
};
/**
 * –ö–æ–Ω—Ç—Ä–æ–ª—ã –∏–≥—Ä—ã
 * @property {HTMLDivElement} boardContainer - –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è.
 * @property {HTMLDivElement} board - –û—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–æ–ª—è (4x4).
 * @property {HTMLDivElement} moves - –ö–æ–Ω—Ç—Ä–æ–ª –¥–ª—è —É—á–µ—Ç–∞ —à–∞–≥–æ–≤.
 * @property {HTMLDivElement} timer - –ö–æ–Ω—Ç—Ä–æ–ª –¥–ª—è —É—á–µ—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏.
 * @property {HTMLButtonElement} start - –ö–Ω–æ–ø–∫–∞ –¥–ª—è —Å—Ç–∞—Ä—Ç–∞ –∏–≥—Ä—ã.
 */
const SELECTORS = {
	boardContainer: document.querySelector(".board-container"),
	board: document.querySelector(".board"),
	moves: document.querySelector(".moves"),
	timer: document.querySelector(".timer"),
	start: document.querySelector("button"),
};
/**
 * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è
 */
const generateGame = () => {
	// –ü–æ–ª—É—á–µ–Ω–∏–µ data –∞—Ç—Ä–∏–±—É—Ç–∞
	const dimensions = SELECTORS.board.dataset.dimension;
	if (dimensions % 2 !== 0) {
		throw new Error("–†–∞–∑–º–µ—Ä –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–µ—Ç–Ω—ã–º!");
	}

	// –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏—è –∏ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏ –¥–ª—è —ç–º–æ–¥–∑–∏
	const shuffleAndPickEmoji = shuffleAndPickRandom(EMOJIS);

	// –ò—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –∫–∞—Ä—Ç–æ—á–∫–∞–º
	const cardsHTML = shuffleAndPickEmoji
		.map((emoji) => {
			return `
      <div class="card">
        <div class="card-front">${emoji}</div>
        <div class="card-back"></div>
      </div>
    `;
		})
		.join("");

	// –í—Å—Ç–∞–≤–∫–∞ –∫–∞—Ä—Ç–æ—á–µ–∫ –≤ –∏–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ
	SELECTORS.board.insertAdjacentHTML("beforeend", cardsHTML);
};

/**
 * –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏–π (–∫–ª–∏–∫ –ø–æ –∫–∞—Ä—Ç–æ—á–∫–µ)
 */
const attachEventListeners = () => {
	// –ø–æ–ª—É—á–µ–Ω–∏–µ HTMLCollection front –∫–∞—Ä—Ç–æ—á–∫–µ–∫ (Need to fix)
	// const cardsFront = SELECTORS.board.children;

	// –ø–æ–ª—É—á–µ–Ω–∏–µ HTMLCollection —Ä–æ–¥–∏—Ç–µ–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫ (card)
	const cardsCollection = SELECTORS.board.children;

	if (cardsCollection) {
		// HTMLCollection –≤ –º–∞—Å—Å–∏–≤
		[...cardsCollection].forEach((card) => {
			// –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∏–∫–∞ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ –≤–∑—è—Ç—É—é –∫–∞—Ä—Ç–æ—á–∫—É
			card.addEventListener("click", (event) => {
				// –ü–æ–ª—É—á–∞–µ–º —Ü–µ–ª—å —Å–æ–±—ã—Ç–∏—è (—ç–ª–µ–º–µ–Ω—Ç, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –ø—Ä–æ–∏–∑–æ—à–µ–ª –∫–ª–∏–∫) –∏ –µ–≥–æ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π —ç–ª–µ–º–µ–Ω—Ç.
				const eventTarget = event.target;
				const eventParent = eventTarget.parentElement;

				// –ï—Å–ª–∏ —Ä–æ–¥–∏—Ç–µ–ª—å —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–ª–∞—Å—Å "card" –∏ –æ–Ω –µ—â–µ –Ω–µ –ø–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç, –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é flipCard().
				if (
					eventParent.classList.contains("card") &&
					!eventParent.className.includes("flipped")
				) {
					flipCard(eventParent);
				}
			});
		});
	}
};

/* –í—ã–∑–æ–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã. */
document.addEventListener("DOMContentLoaded", () => {
	generateGame(); // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–≥—Ä—É
	attachEventListeners(); // –ü—Ä–∏–∫—Ä–µ–ø–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
});
